# Задача7-1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив, заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы. Сортировка должна быть реализована в виде функции. По возможности доработайте алгоритм (сделайте его умнее).
import random


def bbl_sort_min_mas(m):
  """
  Метод, сортирующий список m по убыванию.  Используется алгоритм сортировки "пузырьком".
  Возвращает отсортированный список.  
  
  """
  for j in range(len(m)-1):
    flag = True
    for i in range(len(m)-1-j):  # Не сравниваем отсортированные элементы
      if m[i] < m[i+1]:
        m[i], m[i+1] = m[i+1], m[i] 
        flag = False    # При итерации произошла замента элементов
    if flag:   #  Если оказалось, что при очередном проходе, выстроились по убыванию ->
      break   #  завершаем обход
      
  return m

  
mas = [random.randint(-100, 100) for i in range(10)] # сформируем список из 10 случ.эл-тов
print(mas)
mas_sort = bbl_sort_min_mas(mas)
print(mas_sort)

# ТЕСТИРОВАНИЕ (при каждом вызове набор чисел будет отличаться)
# print(mas)  ->  [-34, 96, -28, 69, -57, -79, 10, 63, 17, 96]
# print(mas_sort)  ->  [96, 96, 69, 63, 17, 10, -28, -34, -57, -79]
